# automatically generated by the FlatBuffers compiler, do not modify

# namespace: SensorLog

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SensorMessage(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SensorMessage()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSensorMessage(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SensorMessage
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SensorMessage
    def SensorType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # SensorMessage
    def Timestamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # SensorMessage
    def DataType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # SensorMessage
    def Data(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def SensorMessageStart(builder):
    builder.StartObject(4)

def Start(builder):
    SensorMessageStart(builder)

def SensorMessageAddSensorType(builder, sensorType):
    builder.PrependInt8Slot(0, sensorType, 0)

def AddSensorType(builder, sensorType):
    SensorMessageAddSensorType(builder, sensorType)

def SensorMessageAddTimestamp(builder, timestamp):
    builder.PrependUint64Slot(1, timestamp, 0)

def AddTimestamp(builder, timestamp):
    SensorMessageAddTimestamp(builder, timestamp)

def SensorMessageAddDataType(builder, dataType):
    builder.PrependUint8Slot(2, dataType, 0)

def AddDataType(builder, dataType):
    SensorMessageAddDataType(builder, dataType)

def SensorMessageAddData(builder, data):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(data), 0)

def AddData(builder, data):
    SensorMessageAddData(builder, data)

def SensorMessageEnd(builder):
    return builder.EndObject()

def End(builder):
    return SensorMessageEnd(builder)
