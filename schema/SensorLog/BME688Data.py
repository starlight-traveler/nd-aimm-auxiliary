# automatically generated by the FlatBuffers compiler, do not modify

# namespace: SensorLog

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BME688Data(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BME688Data()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBME688Data(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BME688Data
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BME688Data
    def Temperature(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # BME688Data
    def Pressure(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # BME688Data
    def Humidity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # BME688Data
    def GasResistance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # BME688Data
    def Altitude(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def BME688DataStart(builder):
    builder.StartObject(5)

def Start(builder):
    BME688DataStart(builder)

def BME688DataAddTemperature(builder, temperature):
    builder.PrependFloat32Slot(0, temperature, 0.0)

def AddTemperature(builder, temperature):
    BME688DataAddTemperature(builder, temperature)

def BME688DataAddPressure(builder, pressure):
    builder.PrependFloat32Slot(1, pressure, 0.0)

def AddPressure(builder, pressure):
    BME688DataAddPressure(builder, pressure)

def BME688DataAddHumidity(builder, humidity):
    builder.PrependFloat32Slot(2, humidity, 0.0)

def AddHumidity(builder, humidity):
    BME688DataAddHumidity(builder, humidity)

def BME688DataAddGasResistance(builder, gasResistance):
    builder.PrependFloat32Slot(3, gasResistance, 0.0)

def AddGasResistance(builder, gasResistance):
    BME688DataAddGasResistance(builder, gasResistance)

def BME688DataAddAltitude(builder, altitude):
    builder.PrependFloat32Slot(4, altitude, 0.0)

def AddAltitude(builder, altitude):
    BME688DataAddAltitude(builder, altitude)

def BME688DataEnd(builder):
    return builder.EndObject()

def End(builder):
    return BME688DataEnd(builder)
